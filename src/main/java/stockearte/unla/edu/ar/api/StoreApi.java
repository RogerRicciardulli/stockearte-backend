/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.16).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package stockearte.unla.edu.ar.api;

import stockearte.unla.edu.ar.model.CreateStoreRequest;
import stockearte.unla.edu.ar.model.EditStoreRequest;
import stockearte.unla.edu.ar.model.GetStoreResponse;
import stockearte.unla.edu.ar.model.StoreResponse;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.bind.annotation.CookieValue;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
@Api(value = "store", description = "the store API")
public interface StoreApi {

    @ApiOperation(value = "Create a new store", nickname = "storeCreatePost", notes = "", response = StoreResponse.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Store created successfully", response = StoreResponse.class) })
    @RequestMapping(value = "/store/create",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<StoreResponse> storeCreatePost(@ApiParam(value = "Store creation request" ,required=true )  @Valid @RequestBody CreateStoreRequest body
);


    @ApiOperation(value = "Edit an existing store", nickname = "storeEditPut", notes = "", response = StoreResponse.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Store updated successfully", response = StoreResponse.class) })
    @RequestMapping(value = "/store/edit",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.PUT)
    ResponseEntity<StoreResponse> storeEditPut(@ApiParam(value = "Store editing request" ,required=true )  @Valid @RequestBody EditStoreRequest body
);


    @ApiOperation(value = "Get details of a specific store", nickname = "storeStoreIdGet", notes = "", response = GetStoreResponse.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Store details", response = GetStoreResponse.class),
        @ApiResponse(code = 404, message = "Store not found") })
    @RequestMapping(value = "/store/{storeId}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<GetStoreResponse> storeStoreIdGet(@ApiParam(value = "The unique ID of the store",required=true) @PathVariable("storeId") Integer storeId
);

}
